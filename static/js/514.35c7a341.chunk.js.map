{"version":3,"file":"static/js/514.35c7a341.chunk.js","mappings":"sPAEaA,EAAOC,EAAAA,GAAAA,GAAH,oLAWJC,EAAQD,EAAAA,GAAAA,GAAH,8LAOLE,EAAOF,EAAAA,GAAAA,EAAH,sK,SCfF,SAASG,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC5B,GAAE,CAACC,KAGF,SAACR,EAAD,UAC+B,KAArB,OAAPM,QAAO,IAAPA,OAAA,EAAAA,EAASO,QAAQC,SAChB,SAACX,EAAD,wDADD,OAGCG,QAHD,IAGCA,OAHD,EAGCA,EAASO,QAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClC,OACE,2BACE,SAAChB,EAAD,UAAQe,KACR,SAACd,EAAD,UAAOe,MAFAF,EAKZ,KAIR,C,mMC3BKG,EAAW,+BACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACaC,EAAAA,EAAAA,IAAA,UACbJ,EADa,wCAC2BC,EAD3B,iBAC2CE,IAFxD,cACCE,EADD,yBAIEA,EAAIC,MAJN,kEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAOL,GAAxC,uFACaC,EAAAA,EAAAA,IAAA,UACbJ,EADa,iCACoBC,EADpB,kBACqCO,EADrC,iBACmDL,IAFhE,cACCE,EADD,yBAIEA,EAAIC,MAJN,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCZ,GAAhC,uFACaO,EAAAA,EAAAA,IAAA,cAChBJ,EADgB,kBACEH,EADF,oBACgBI,EADhB,SADb,cACCI,EADD,yBAIEA,EAAIC,MAJN,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,gGAEeO,EAAAA,EAAAA,IAAA,UACbJ,EADa,kBACKH,EADL,4BAC2BI,IAH1C,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHK,QAAQC,IAAI,KAAMC,SAPf,gFAWA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BK,GAA5B,gGAEeO,EAAAA,EAAAA,IAAA,gBAChBJ,EADgB,kBACEH,EADF,4BACwBI,EADxB,WAFf,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHK,QAAQC,IAAI,KAAMC,SAPf,gF","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  margin: 0;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/Api';\nimport { List, Title, Text } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <List>\n      {reviews?.results.length === 0 ? (\n        <Text>We don't have any reviews for this movie.</Text>\n      ) : (\n        reviews?.results.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <Title>{author}</Title>\n              <Text>{content}</Text>\n            </li>\n          );\n        })\n      )}\n    </List>\n  );\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd7be37f171d8123214539749ff0838e8';\n\nexport async function fetchTrendingFilms(page) {\n  const res = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  return res.data;\n}\n\nexport async function fetchMovieByQuery(query, page) {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return res.data;\n}\n\nexport async function movieDetailsById(id) {\n  const res = await axios.get(`\n  ${BASE_URL}/movie/${id}?api_key=${API_KEY}\n  `);\n  return res.data;\n}\n\nexport async function fetchActorsFilm(id) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id) {\n  try {\n    const res = await axios.get(`\n    ${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}\n    `);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["List","styled","Title","Text","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","then","results","length","map","id","author","content","BASE_URL","API_KEY","fetchTrendingFilms","page","axios","res","data","fetchMovieByQuery","query","movieDetailsById","fetchActorsFilm","console","log","message"],"sourceRoot":""}